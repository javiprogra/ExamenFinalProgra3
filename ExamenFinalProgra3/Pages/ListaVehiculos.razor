@page "/listadovehiculos"
@inject HttpClient Http
@using Models;
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject NavigationManager NavigationManager
<PageTitle>Weather</PageTitle>

<h1>Listado de Vehiculos</h1>
<h2>Automoviles</h2>


@if (automoviles == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Número de chasis</th>
                <th>Marca</th>
                <th>Fecha de fabricación</th>
                <th>Número de puertas</th>
                <th>Tipo de combustible</th>
                <th>Editar</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var automovil in automoviles)
            {
                <tr>
                    <td>@automovil.numeroChasis</td>
                    <td>@automovil.marca</td>
                    <td>@automovil.fechaFabricacion</td>
                    <td>@automovil.numeroPuertas</td>
                    <td>@automovil.tipoCombustible</td>
                    <td>
                        <button class="btn btn-warning"
                                @onclick="@(() => NavigationManager.NavigateTo($"/automovil-editar/{automovil.numeroChasis}"))">
                            Editar
                        </button>
                    </td>
                    <td>
                        <button class="btn btn-danger"
                                @onclick="@(() => NavigationManager.NavigateTo($"/automovil-borrar/{automovil.numeroChasis}"))">
                            Eliminar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<Automovil> automoviles = new List<Automovil>();

    protected override async Task OnInitializedAsync()
    {
        //Recuperar y validar los datos de libros
        var savedAutomoviles = localStorage.GetItem<List<Automovil>>("automoviles");
        if (savedAutomoviles != null)
        {
            automoviles = savedAutomoviles;
        }

        int contador = automoviles.Count();
    }
}
